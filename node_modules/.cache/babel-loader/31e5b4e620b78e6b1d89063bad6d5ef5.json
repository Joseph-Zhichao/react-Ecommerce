{"ast":null,"code":"var _jsxFileName = \"/Users/josephzhu/Desktop/front-end-projects/eCommerce/src/context/shopContext.js\";\nimport React, { Component } from 'react';\nimport Client from 'shopify-buy';\nconst ShopContext = React.createContext();\nconst client = Client.buildClient({\n  domain: 'your-shop-name.myshopify.com',\n  storefrontAccessToken: 'your-storefront-access-token'\n});\n\nclass ShopProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      product: {},\n      checkout: {},\n      isCartOpen: false,\n      test: 'test'\n    };\n\n    this.createCheckout = async () => {\n      const checkout = await client.checkout.create();\n      console.log(checkout);\n    };\n\n    this.addItemToCart = async (variantId, quantity) => {};\n\n    this.fetchAllProducts = async () => {};\n\n    this.fetchProductWithId = async id => {};\n\n    this.closeCart = () => {};\n\n    this.openCart = () => {};\n  }\n\n  componentDidMount() {\n    this.createCheckout();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ShopContext.Provider, {\n      value: { ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, this.props.children));\n  }\n\n}\n\nconst ShopConsumer = ShopContext.Consumer;\nexport { ShopConsumer, ShopContext };\nexport default ShopProvider;","map":{"version":3,"sources":["/Users/josephzhu/Desktop/front-end-projects/eCommerce/src/context/shopContext.js"],"names":["React","Component","Client","ShopContext","createContext","client","buildClient","domain","storefrontAccessToken","ShopProvider","state","products","product","checkout","isCartOpen","test","createCheckout","create","console","log","addItemToCart","variantId","quantity","fetchAllProducts","fetchProductWithId","id","closeCart","openCart","componentDidMount","render","props","children","ShopConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,WAAP,CAAmB;AAC9BC,EAAAA,MAAM,EAAE,8BADsB;AAE9BC,EAAAA,qBAAqB,EAAE;AAFO,CAAnB,CAAf;;AAKA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCS,KAFiC,GAEzB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,OAAO,EAAC,EAFJ;AAGJC,MAAAA,QAAQ,EAAC,EAHL;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,IAAI,EAAE;AALF,KAFyB;;AAAA,SAejCC,cAfiC,GAehB,YAAY;AACzB,YAAMH,QAAQ,GAAG,MAAMR,MAAM,CAACQ,QAAP,CAAgBI,MAAhB,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH,KAlBgC;;AAAA,SAoBjCO,aApBiC,GAoBjB,OAAOC,SAAP,EAAkBC,QAAlB,KAA+B,CAE9C,CAtBgC;;AAAA,SAwBjCC,gBAxBiC,GAwBd,YAAW,CAE7B,CA1BgC;;AAAA,SA4BjCC,kBA5BiC,GA4BZ,MAAMC,EAAN,IAAa,CAEjC,CA9BgC;;AAAA,SAgCjCC,SAhCiC,GAgCrB,MAAM,CAEjB,CAlCgC;;AAAA,SAoCjCC,QApCiC,GAoCtB,MAAM,CAAI,CApCY;AAAA;;AAWjCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,cAAL;AACH;;AAyBDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAK,EAAC,GAAG,KAAKnB;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKoB,KAAL,CAAWC,QADhB,CADJ,CADJ;AAOH;;AA9CgC;;AAiDrC,MAAMC,YAAY,GAAG7B,WAAW,CAAC8B,QAAjC;AAEA,SAASD,YAAT,EAAuB7B,WAAvB;AAEA,eAAeM,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Client from 'shopify-buy'\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n    domain: 'your-shop-name.myshopify.com',\n    storefrontAccessToken: 'your-storefront-access-token'\n  });\n\nclass ShopProvider extends Component {\n\n    state = {\n        products: [],\n        product:{},\n        checkout:{},\n        isCartOpen: false,\n        test: 'test'\n    }\n\n\n    componentDidMount() {\n        this.createCheckout();\n    }\n\n    createCheckout = async () => {\n        const checkout = await client.checkout.create();\n        console.log(checkout);\n    }\n\n    addItemToCart = async( variantId, quantity) => {\n        \n    }\n\n    fetchAllProducts = async() => {\n\n    }\n\n    fetchProductWithId = async(id) => {\n\n    }\n\n    closeCart = () => {\n        \n    }\n\n    openCart = () => {  }\n    \n    render() {\n        return (\n            <div>\n                <ShopContext.Provider value = { {...this.state}}>\n                    {this.props.children}\n                </ShopContext.Provider>\n            </div>\n        )\n    }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext}\n\nexport default ShopProvider"]},"metadata":{},"sourceType":"module"}